import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Seeding database...')

  // Create users (doctors and staff)
  const doctor1 = await prisma.user.create({
    data: {
      email: 'dr.rahman@srpharma.com',
      name: '‡¶°‡¶æ. ‡¶∞‡¶π‡¶ø‡¶Æ ‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶®',
      role: 'doctor',
      phone: '01712345678',
    },
  })

  const doctor2 = await prisma.user.create({
    data: {
      email: 'dr.fatema@srpharma.com',
      name: '‡¶°‡¶æ. ‡¶´‡¶æ‡¶§‡ßá‡¶Æ‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®',
      role: 'doctor',
      phone: '01812345679',
    },
  })

  const staff1 = await prisma.user.create({
    data: {
      email: 'admin@srpharma.com',
      name: '‡¶®‡¶æ‡¶∏‡¶ø‡¶∞ ‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶',
      role: 'admin',
      phone: '01912345680',
    },
  })

  console.log('‚úÖ Users created')

  // Create patients
  const patients = await Promise.all([
    prisma.patient.create({
      data: {
        name: '‡¶Ü‡¶¨‡ßÅ‡¶≤ ‡¶ï‡¶æ‡¶∏‡ßá‡¶Æ',
        email: 'abul@email.com',
        phone: '01712345681',
        address: '‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø, ‡¶¢‡¶æ‡¶ï‡¶æ',
        dateOfBirth: new Date('1990-05-15'),
        gender: '‡¶™‡ßÅ‡¶∞‡ßÅ‡¶∑',
        bloodGroup: 'A+',
      },
    }),
    prisma.patient.create({
      data: {
        name: '‡¶∞‡¶π‡¶ø‡¶Æ‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®',
        email: 'rahima@email.com',
        phone: '01812345682',
        address: '‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ, ‡¶¢‡¶æ‡¶ï‡¶æ',
        dateOfBirth: new Date('1985-08-22'),
        gender: '‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ',
        bloodGroup: 'B+',
      },
    }),
    prisma.patient.create({
      data: {
        name: '‡¶ï‡¶∞‡¶ø‡¶Æ ‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶®',
        phone: '01912345683',
        address: '‡¶Æ‡¶ø‡¶∞‡¶™‡ßÅ‡¶∞, ‡¶¢‡¶æ‡¶ï‡¶æ',
        dateOfBirth: new Date('1975-12-10'),
        gender: '‡¶™‡ßÅ‡¶∞‡ßÅ‡¶∑',
        bloodGroup: 'O+',
      },
    }),
    prisma.patient.create({
      data: {
        name: '‡¶∏‡¶æ‡¶≤‡¶Æ‡¶æ ‡¶¨‡ßá‡¶ó‡¶Æ',
        phone: '01612345684',
        address: '‡¶ó‡ßÅ‡¶≤‡¶∂‡¶æ‡¶®, ‡¶¢‡¶æ‡¶ï‡¶æ',
        dateOfBirth: new Date('1992-03-18'),
        gender: '‡¶Æ‡¶π‡¶øÔøΩÔøΩÔøΩ‡¶æ',
        bloodGroup: 'AB+',
      },
    }),
    prisma.patient.create({
      data: {
        name: '‡¶ú‡¶æ‡¶π‡¶ø‡¶¶ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®',
        email: 'jahid@email.com',
        phone: '01712345685',
        address: '‡¶¨‡¶®‡¶æ‡¶®‡ßÄ, ‡¶¢‡¶æ‡¶ï‡¶æ',
        dateOfBirth: new Date('1988-07-25'),
        gender: '‡¶™‡ßÅ‡¶∞‡ßÅ‡¶∑',
        bloodGroup: 'A-',
      },
    }),
  ])

  console.log('‚úÖ Patients created')

  // Create medicines
  const medicines = await Promise.all([
    prisma.medicine.create({
      data: {
        sku: 'MED001',
        name: '‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶∏‡¶ø‡¶ü‡¶æ‡¶Æ‡¶≤',
        genericName: 'Paracetamol',
        category: 'Tablet',
        manufacturer: 'Square Pharmaceuticals',
        strength: '500mg',
        unit: 'piece',
        purchasePrice: 2.00,
        sellingPrice: 3.00,
        stockQty: 500,
        reorderLevel: 50,
        expiryDate: new Date('2025-12-31'),
        batchNumber: 'PAR001',
      },
    }),
    prisma.medicine.create({
      data: {
        sku: 'MED002',
        name: '‡¶®‡¶æ‡¶™‡¶æ ‡¶è‡¶ï‡ßç‡¶∏‡¶ü‡ßá‡¶®‡ßç‡¶°',
        genericName: 'Paracetamol Extended Release',
        category: 'Tablet',
        manufacturer: 'Beximco Pharmaceuticals',
        strength: '665mg',
        unit: 'piece',
        purchasePrice: 4.50,
        sellingPrice: 6.00,
        stockQty: 250,
        reorderLevel: 30,
        expiryDate: new Date('2025-10-31'),
        batchNumber: 'NAP001',
      },
    }),
    prisma.medicine.create({
      data: {
        sku: 'MED003',
        name: '‡¶∏‡¶ø‡¶∞‡¶æ‡¶™',
        genericName: 'Paracetamol Syrup',
        category: 'Syrup',
        manufacturer: 'Incepta Pharmaceuticals',
        strength: '120mg/5ml',
        unit: 'bottle',
        purchasePrice: 45.00,
        sellingPrice: 65.00,
        stockQty: 12,
        reorderLevel: 5,
        expiryDate: new Date('2025-08-31'),
        batchNumber: 'SYR001',
      },
    }),
    prisma.medicine.create({
      data: {
        sku: 'MED004',
        name: '‡¶è‡¶Æ‡ßã‡¶ï‡ßç‡¶∏‡¶ø‡¶∏‡¶ø‡¶≤‡¶ø‡¶®',
        genericName: 'Amoxicillin',
        category: 'Capsule',
        manufacturer: 'Renata Limited',
        strength: '250mg',
        unit: 'piece',
        purchasePrice: 8.00,
        sellingPrice: 12.00,
        stockQty: 180,
        reorderLevel: 25,
        expiryDate: new Date('2025-11-30'),
        batchNumber: 'AMX001',
      },
    }),
    prisma.medicine.create({
      data: {
        sku: 'MED005',
        name: '‡¶ì‡¶Æ‡¶ø‡¶™‡ßç‡¶∞‡¶æ‡¶ú‡¶≤',
        genericName: 'Omeprazole',
        category: 'Capsule',
        manufacturer: 'ACI Limited',
        strength: '20mg',
        unit: 'piece',
        purchasePrice: 15.00,
        sellingPrice: 22.00,
        stockQty: 8,
        reorderLevel: 15,
        expiryDate: new Date('2025-09-30'),
        batchNumber: 'OME001',
      },
    }),
    prisma.medicine.create({
      data: {
        sku: 'MED006',
        name: '‡¶á‡¶¨‡ßÅ‡¶™‡ßç‡¶∞‡ßã‡¶´‡ßá‡¶®',
        genericName: 'Ibuprofen',
        category: 'Tablet',
        manufacturer: 'Opsonin Pharma',
        strength: '400mg',
        unit: 'piece',
        purchasePrice: 6.00,
        sellingPrice: 9.00,
        stockQty: 320,
        reorderLevel: 40,
        expiryDate: new Date('2026-01-31'),
        batchNumber: 'IBU001',
      },
    }),
  ])

  console.log('‚úÖ Medicines created')

  // Create appointments
  const appointments = await Promise.all([
    prisma.appointment.create({
      data: {
        patientId: patients[0].id,
        doctorId: doctor1.id,
        date: new Date('2024-01-15'),
        time: '10:00',
        type: 'consultation',
        status: 'confirmed',
        notes: '‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ‡¶ø‡¶§ ‡¶ö‡ßá‡¶ï‡¶Ü‡¶™',
      },
    }),
    prisma.appointment.create({
      data: {
        patientId: patients[1].id,
        doctorId: doctor2.id,
        date: new Date('2024-01-15'),
        time: '11:30',
        type: 'followup',
        status: 'confirmed',
        notes: '‡¶´‡¶≤‡ßã‡¶Ü‡¶™ ‡¶ö‡ßá‡¶ï‡¶Ü‡¶™',
      },
    }),
    prisma.appointment.create({
      data: {
        patientId: patients[2].id,
        doctorId: doctor1.id,
        date: new Date('2024-01-16'),
        time: '09:00',
        type: 'consultation',
        status: 'scheduled',
        notes: '‡¶ú‡ßç‡¶¨‡¶∞ ‡¶ì ‡¶∏‡¶∞‡ßç‡¶¶‡¶ø‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ',
      },
    }),
    prisma.appointment.create({
      data: {
        patientId: patients[3].id,
        doctorId: doctor2.id,
        date: new Date('2024-01-16'),
        time: '14:00',
        type: 'consultation',
        status: 'confirmed',
        notes: '‡¶™‡ßá‡¶ü‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ',
      },
    }),
    prisma.appointment.create({
      data: {
        patientId: patients[4].id,
        doctorId: doctor1.id,
        date: new Date('2024-01-17'),
        time: '15:30',
        type: 'emergency',
        status: 'completed',
        notes: '‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ',
      },
    }),
  ])

  console.log('‚úÖ Appointments created')

  // Create prescriptions with medicines
  const prescription1 = await prisma.prescription.create({
    data: {
      patientId: patients[0].id,
      doctorId: doctor1.id,
      date: new Date('2024-01-15'),
      diagnosis: '‡¶ú‡ßç‡¶¨‡¶∞ ‡¶ì ‡¶Æ‡¶æ‡¶•‡¶æ‡¶¨‡ßç‡¶Ø‡¶•‡¶æ',
      notes: '‡¶™‡ßç‡¶∞‡¶ö‡ßÅ‡¶∞ ‡¶™‡¶æ‡¶®‡¶ø ‡¶™‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶ø‡¶∂‡ßç‡¶∞‡¶æ‡¶Æ ‡¶®‡¶ø‡¶®',
      status: 'issued',
      medicines: {
        create: [
          {
            medicineId: medicines[0].id,
            dosage: '1‡¶ü‡¶ø',
            frequency: '‡¶¶‡¶ø‡¶®‡ßá ‡ß© ‡¶¨‡¶æ‡¶∞',
            duration: '‡ß´ ‡¶¶‡¶ø‡¶®',
            instructions: '‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶∏‡ßá‡¶¨‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®',
            quantity: 15,
          },
          {
            medicineId: medicines[5].id,
            dosage: '1‡¶ü‡¶ø',
            frequency: '‡¶¶‡¶ø‡¶®‡ßá ‡ß® ‡¶¨‡¶æ‡¶∞',
            duration: '‡ß© ‡¶¶‡¶ø‡¶®',
            instructions: '‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶∏‡ßá‡¶¨‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®',
            quantity: 6,
          },
        ],
      },
    },
  })

  const prescription2 = await prisma.prescription.create({
    data: {
      patientId: patients[1].id,
      doctorId: doctor2.id,
      date: new Date('2024-01-15'),
      diagnosis: '‡¶ó‡ßç‡¶Ø‡¶æ‡¶∏‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶ì ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶°‡¶ø‡¶ü‡¶ø',
      notes: '‡¶§‡ßá‡¶≤-‡¶Æ‡¶∏‡¶≤‡¶æ ‡¶ú‡¶æ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶è‡¶°‡¶º‡¶ø‡¶Ø‡¶º‡ßá ‡¶ö‡¶≤‡ßÅ‡¶®',
      status: 'issued',
      medicines: {
        create: [
          {
            medicineId: medicines[4].id,
            dosage: '1‡¶ü‡¶ø',
            frequency: '‡¶¶‡¶ø‡¶®‡ßá ‡ßß ‡¶¨‡¶æ‡¶∞',
            duration: '‡ßß‡ß¶ ‡¶¶‡¶ø‡¶®',
            instructions: '‡¶∏‡¶ï‡¶æ‡¶≤‡ßá ‡¶ñ‡¶æ‡¶≤‡¶ø ‡¶™‡ßá‡¶ü‡ßá ‡¶∏‡ßá‡¶¨‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®',
            quantity: 10,
          },
        ],
      },
    },
  })

  console.log('‚úÖ Prescriptions created')

  // Create some sales records
  const sale1 = await prisma.sale.create({
    data: {
      invoiceNo: 'INV-2024-001',
      patientId: patients[0].id,
      totalAmount: 45.00,
      discount: 0,
      tax: 0,
      finalAmount: 45.00,
      paymentMethod: 'cash',
      status: 'completed',
      items: {
        create: [
          {
            medicineId: medicines[0].id,
            quantity: 15,
            unitPrice: 3.00,
            totalPrice: 45.00,
          },
        ],
      },
    },
  })

  const sale2 = await prisma.sale.create({
    data: {
      invoiceNo: 'INV-2024-002',
      patientId: patients[1].id,
      totalAmount: 220.00,
      discount: 10.00,
      tax: 0,
      finalAmount: 210.00,
      paymentMethod: 'card',
      status: 'completed',
      items: {
        create: [
          {
            medicineId: medicines[4].id,
            quantity: 10,
            unitPrice: 22.00,
            totalPrice: 220.00,
          },
        ],
      },
    },
  })

  console.log('‚úÖ Sales created')

  // Create stock movements
  await Promise.all([
    prisma.stockMovement.create({
      data: {
        medicineId: medicines[0].id,
        type: 'sale',
        quantity: -15,
        reason: 'Sold to patient',
        reference: 'INV-2024-001',
      },
    }),
    prisma.stockMovement.create({
      data: {
        medicineId: medicines[4].id,
        type: 'sale',
        quantity: -10,
        reason: 'Sold to patient',
        reference: 'INV-2024-002',
      },
    }),
    prisma.stockMovement.create({
      data: {
        medicineId: medicines[2].id,
        type: 'purchase',
        quantity: 50,
        reason: 'New stock received',
        reference: 'PUR-2024-001',
      },
    }),
  ])

  console.log('‚úÖ Stock movements created')

  console.log('üéâ Database seeded successfully!')
}

main()
  .catch((e) => {
    console.error('‚ùå Error seeding database:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
